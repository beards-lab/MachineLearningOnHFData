# 清除环境中的所有变量
rm(list = ls())

# 安装并加载必要的软件包
necessary_packages <- c("clustMixType", "FactoMineR", "factoextra", "cluster", "openxlsx", "fpc")

installed_packages <- rownames(installed.packages())

for (pkg in necessary_packages) {
  if (!(pkg %in% installed_packages)) {
    install.packages(pkg)
  }
  library(pkg, character.only = TRUE)
}

# 读取数据
file_path <- "C:/Users/fenggu/University of Michigan Dropbox/Feng Gu/GitHub/MachineLearningOnHFData/test.xlsx"  # 请替换为实际路径
user_data <- readxl::read_excel(file_path)

# 选择第三列到最后一列
user_data_selected <- user_data[, 3:ncol(user_data)]

# 将包含0和1的列转换为因子类型
user_data_processed <- user_data_selected
user_data_processed[] <- lapply(user_data_processed, function(x) {
  if (all(x %in% c(0, 1))) {
    as.factor(x)
  } else {
    x
  }
})


set.seed(42)
# FAMD分析
famd_result <- FAMD(user_data_processed, ncp = 10, graph = FALSE)

# 提取主成分结果
principal_components <- as.data.frame(famd_result$ind$coord)

fviz_screeplot(famd_result)
# fviz_famd_ind(famd_result)
fviz_famd_var(famd_result)

# 定义评估函数
evaluate_clusters <- function(data, max_clusters) {
  sil_width <- numeric(max_clusters)
  ch_index <- numeric(max_clusters)
  
  for (k in 2:max_clusters) {
    hc <- hclust(data, method = "ward.D2")
    clusters <- cutree(hc, k = k)
    
    # 计算轮廓系数
    sil <- silhouette(clusters, data)
    sil_width[k] <- mean(sil[, 3])
    
    # 计算Calinski-Harabasz指数
    ch_index[k] <- cluster.stats(data, clusters)$ch
  }
  
  return(list(sil = sil_width, ch = ch_index))
}

# 计算Gower距离
gower_dist <- daisy(user_data_processed, metric = "gower")
gower_dist_matrix <- as.dist(gower_dist)

# 评估层次聚类的最佳聚类数目
max_clusters <- 10  # 最大聚类数，可以根据需要调整
hc_results <- evaluate_clusters(gower_dist_matrix, max_clusters)
# 可视化评估结果
par(mfrow = c(1, 2))

# 轮廓系数
plot(2:max_clusters, hc_results$sil[2:max_clusters], type = "b", xlab = "Number of Clusters", ylab = "Silhouette Width", main = "Silhouette Coefficient")

# Calinski-Harabasz指数
plot(2:max_clusters, hc_results$ch[2:max_clusters], type = "b", xlab = "Number of Clusters", ylab = "Calinski-Harabasz Index", main = "Calinski-Harabasz Index")

par(mfrow = c(1, 1))
# 根据轮廓系数或Calinski-Harabasz指数确定最佳聚类数
optimal_clusters_hc <- 3

# 进行最终的层次聚类
hc_final <- hclust(gower_dist_matrix, method = "ward.D2")
final_clusters_hc <- cutree(hc_final, k = optimal_clusters_hc)
plot(hc_final, labels = FALSE, main = "Hierarchical Clustering Dendrogram")
# K原型聚类 (k-prototypes clustering)
optimal_clusters_kproto <- function(data, max_clusters) {
  sil_width <- numeric(max_clusters)
  ch_index <- numeric(max_clusters)
  
  for (k in 2:max_clusters) {
    kproto_result <- kproto(data, k)
    
    # 计算轮廓系数
    sil <- silhouette(kproto_result$cluster, daisy(data))
    sil_width[k] <- mean(sil[, 3])
    
    # 计算Calinski-Harabasz指数
    ch_index[k] <- cluster.stats(daisy(data), kproto_result$cluster)$ch
  }
  
  return(list(sil = sil_width, ch = ch_index))
}

# 评估K原型聚类的最佳聚类数目
kproto_results <- optimal_clusters_kproto(user_data_processed, max_clusters)
# 可视化评估结果
par(mfrow = c(1, 2))

# 轮廓系数
plot(2:max_clusters, kproto_results$sil[2:max_clusters], type = "b", xlab = "Number of Clusters", ylab = "Silhouette Width", main = "Silhouette Coefficient (k-prototypes)")

# Calinski-Harabasz指数
plot(2:max_clusters, kproto_results$ch[2:max_clusters], type = "b", xlab = "Number of Clusters", ylab = "Calinski-Harabasz Index (k-prototypes)", main = "Calinski-Harabasz Index (k-prototypes)")

par(mfrow = c(1, 1))

# 根据轮廓系数或Calinski-Harabasz指数确定最佳聚类数
optimal_clusters_kproto <- 3

# 进行最终的K原型聚类
kproto_final <- kproto(user_data_processed, optimal_clusters_kproto)
final_clusters_kproto <- kproto_final$cluster

# 创建最终的数据框只包含主成分结果和聚类结果
final_result <- principal_components
final_result$HC_Cluster <- final_clusters_hc
final_result$KProto_Cluster <- final_clusters_kproto

# 创建一个新的Excel工作簿
wb <- createWorkbook()

# 添加一个工作表
addWorksheet(wb, "Clustered Data")

# 写入数据到工作表
writeData(wb, sheet = "Clustered Data", x = final_result)

# 保存Excel文件
saveWorkbook(wb, file = "Final_Clustered_Data.xlsx", overwrite = TRUE)

# 打印完成信息
cat("数据处理及聚类分析已完成，结果已保存至 Final_Clustered_Data.xlsx\n")
